
Lab 1.1:Data Query Language


1)List the Name and Designation code of the staff who have joined before Jan 2003 and whose salary range is between 12000 and 25000. Display the columns with user defined Column headers. Hint: Use As clause along with other operators

ans:SQL> select Staff_Name as Name,Design_Code as DesignationCode from Staff_Master where HireDate<'01-jan-2003' and Staff_Sal between 12000 and 25000;

NAME                                               DESIGNATIONCODE
-------------------------------------------------- ---------------
Shyam                                                          102
Mohan                                                          102
Anil                                                           102

2. List the staff code, name, and department number of the staff who have experience of 18 or more years and sort them based on their experience.


ans: select Staff_code,Staff_Name,Dept_Code from Staff_Master where hiredate<'01-Dec-2001';

STAFF_CODE STAFF_NAME                                          DEPT_CODE
---------- -------------------------------------------------- ----------
    100004 Anil                                                       20
    100005 John                                                       10
    100006 Allen                                                      30   (sort)

3. Display the staff details who do not have manager. Hint: Use is null

ans:select * from staff_master where mgr_code is null;

no rows selected
4. Display the Book details that were published during the period of 2001 to 2004. Also display book details with Book name having the character ‘&’ anywhere.

ans:select * from book_master where book_pub_year between 2001 and 2004 and book_name like '%&%';

5. List the names of the staff having ‘_’ character in their name.

ans: select * from staff_master where staff_name like '%\_%' escape '\';

no rows selected


lab 2.1:
1. Create a query which will display Staff Name, Salary of each staff. Format the salary to be 15 characters long and left padded with ‘$’.

ans: alter table staff_master modify staff_sal number(15,2);

Table altered.

SQL> select staff_name,concat('$',staff_sal) from staff_master;

STAFF_NAME                                         CONCAT('$',STAFF_SAL)
-------------------------------------------------- -----------------------------------------
Arvind                                             $17000
Shyam                                              $20000
Mohan                                              $24000
Anil                                               $20000
John                                               $32000
Allen                                              $42000
Smith                                              $62000
Raviraj                                            $18000
Rahul                                              $22000
Ram                                                $32000

10 rows selected.

2. Display name and date of birth of students where date of birth must be displayed in the format similar to “January, 12 1981” for those who were born on Saturday or Sunday.
ans:
SQL> SELECT STUDENT_NAME,TO_CHAR(STUDENT_DOB,'MONTH DD YYYY') AS STUDENT_DOB FROM STUDENT_MASTER WHERE TO_CHAR(STUDENT_DOB,'DAY') LIKE  ('%SATURDAY%') OR TO_CHAR(STUDENT_DOB,'DAY') LIKE  ('%SUNDAY%') ;

STUDENT_NAME                                       STUDENT_DOB
-------------------------------------------------- --------------------------------------------
Ravi                                               NOVEMBER  01 1981
Raj                                                JANUARY   14 1979
Arvind                                             JANUARY   15 1983
Mehul                                              JANUARY   17 1982
Vijay                                              JANUARY   19 1980
Rajat                                              JANUARY   20 1980
Ramesh                                             DECEMBER  27 1980
Amit Raj                                           SEPTEMBER 28 1980

8 rows selected.
3. Display each Staff name and number of months they worked for the organization. Label the column as ‘Months Worked’. Order your result by number of months employed. Also Round the number of months to closest whole number.
ans:
 SELECT STAFF_NAME,ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED FROM STAFF_MASTER ORDER BY MONTHS_WORKED DESC;

STAFF_NAME                                         MONTHS_WORKED
-------------------------------------------------- -------------
John                                                         222
Anil                                                         220
Allen                                                        219
Ram                                                          210
Mohan                                                        210
Shyam                                                        209
Smith                                                        208
Arvind                                                       198
Raviraj                                                      198
Rahul                                                        187

10 rows selected.
4. List the details of the staff who have joined in first half of December month (irrespective of the year).
ans:
SQL> SELECT * FROM STAFF_MASTER WHERE TO_CHAR(HIREDATE,'DD') BETWEEN 1 AND 15 AND TO_CHAR(HIREDATE,'MONTH') LIKE '%DECEMBER%' ;

STAFF_CODE STAFF_NAME                                         DESIGN_CODE  DEPT_CODE STAFF_DOB HIREDATE    MGR_CODE  STAFF_SAL STAFF_ADDRESS
---------- -------------------------------------------------- ----------- ---------- --------- --------- ---------- ---------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    100009 Rahul                                                      102         20 16-JAN-78 11-DEC-03     100006      22000 Hyderabad
5. Write a query that displays Staff Name, Salary, and Grade of all staff. Grade depends on the following table.
ans:
 SELECT STAFF_NAME,STAFF_SAL,
  2  CASE
  3  WHEN STAFF_SAL >=50000 THEN 'A'
  4  WHEN STAFF_SAL  >25000 AND  STAFF_SAL<50000 THEN 'B'
  5  WHEN STAFF_SAL  >10000 AND  STAFF_SAL<25000 THEN 'C'
  6  ELSE 'D'
  7  END CASE
  8  FROM STAFF_MASTER;

STAFF_NAME                                          STAFF_SAL C
-------------------------------------------------- ---------- -
Arvind                                                  17000 C
Shyam                                                   20000 C
Mohan                                                   24000 C
Anil                                                    20000 C
John                                                    32000 B
Allen                                                   42000 B
Smith                                                   62000 A
Raviraj                                                 18000 C
Rahul                                                   22000 C
Ram                                                     32000 B

10 rows selected.

6. Display the Staff Name, Hire date and day of the week on which staff was hired. Label the column as DAY. Order the result by the day of the week starting with Monday
ans:
SQL> SELECT STAFF_NAME,TO_CHAR(HIREDATE,'DD MONTH YYYY') AS HIRE_DATE,TO_CHAR(HIREDATE,'DAY')AS DAY FROM STAFF_MASTER ORDER BY TO_CHAR(HIREDATE,'DAY') DESC;

STAFF_NAME                                         HIRE_DATE                                    DAY
-------------------------------------------------- -------------------------------------------- ------------------------------------
Arvind                                             15 JANUARY   2003                            WEDNESDAY
Smith                                              12 MARCH     2002                            TUESDAY
Ram                                                17 JANUARY   2002                            THURSDAY
Rahul                                              11 DECEMBER  2003                            THURSDAY
Anil                                               11 MARCH     2001                            SUNDAY
Shyam                                              17 FEBRUARY  2002                            SUNDAY
John                                               21 JANUARY   2001                            SUNDAY
Raviraj                                            11 JANUARY   2003                            SATURDAY
Mohan                                              19 JANUARY   2002                            SATURDAY
Allen                                              23 APRIL     2001                            MONDAY

10 rows selected.

7. Write a query to find the position of third occurrence of ‘i’ in the given word ‘Mississippi’.
ans:
SQL> SELECT INSTR('Mississippi','i',2,3) FROM DUAL;

INSTR('MISSISSIPPI','I',2,3)
----------------------------
                           8

8. Write a query to find the pay date for the month. Pay date is the last Friday of the month. Display the date in the format “Twenty Eighth of January, 2002”. Label the heading as PAY DATE. Hint: use to_char, next_day and last_day functions
ans:
SQL> SELECT TO_CHAR(NEXT_DAY(SYSDATE,'TUESDAY'),'DD MONTH ,YYYY') AS DAY FROM DUAL WHERE NEXT_DAY(SYSDATE,'TUESDAY')<LAST_DAY(SYSDATE) ;

DAY
---------------------------------------------
23 JULY      ,2019
9. Display Student code, Name and Dept Name. Display “Electricals” if dept code = 20, “Electronics” if Dept code =30 and “Others” for all other Dept codes in the Dept Name column. Hint : Use Decode
ans:
SQL>  SELECT STUDENT_CODE,STUDENT_NAME,DECODE(DEPT_CODE,20,'ELECTRICALS',30,'ELECTRONICS','OTHERS') DEPARTMENT_NAME FROM STUDENT_MASTER;

STUDENT_CODE STUDENT_NAME                                       DEPARTMENT_
------------ -------------------------------------------------- -----------
        1001 Amit                                               OTHERS
        1002 Ravi                                               OTHERS
        1003 Ajay                                               ELECTRICALS
        1004 Raj                                                ELECTRONICS
        1005 Arvind                                             OTHERS
        1006 Rahul                                              OTHERS
        1007 Mehul                                              ELECTRICALS
        1008 Dev                                                OTHERS
        1009 Vijay                                              ELECTRONICS
        1010 Rajat                                              OTHERS
        1011 Sunder                                             OTHERS

STUDENT_CODE STUDENT_NAME                                       DEPARTMENT_
------------ -------------------------------------------------- -----------
        1012 Rajesh                                             ELECTRONICS
        1013 Anil                                               ELECTRICALS
        1014 Sunil                                              OTHERS
        1015 Kapil                                              OTHERS
        1016 Ashok                                              OTHERS
        1017 Ramesh                                             ELECTRONICS
        1018 Amit Raj                                           OTHERS
        1019 Ravi Raj                                           OTHERS
        1020 Amrit                                              OTHERS
        1021 Sumit                                              ELECTRICALS

21 rows selected.

2.2: Group Functions:
1. Display the Highest, Lowest, Total & Average salary of all staff. Label the columns Maximum, Minimum, Total and Average respectively for each Department code. Also round the result to the nearest whole number.
2. Display Department code and number of managers working in that department. Label the column as ‘Total Number of Managers’ for each department.
3. Get the Department number, and sum of Salary of all non-managers where the sum is greater than 20000.

3.1: Joins and Subqueries
1. Write a query which displays Staff Name, Department Code, Department Name, and Salary for all staff who earns more than 20000.

ans:SQL> select s.staff_name,d.dept_code,d.dept_name,s.staff_sal from staff_master s,department_master d where d.dept_code=s.dept_code and s.staff_sal>20000;

STAFF_NAME                                          DEPT_CODE DEPT_NAME                                   STAFF_SAL
-------------------------------------------------- ---------- -------------------------------------------------- ----------
Mohan                                                      10 Computer Science                                24000
John                                                       10 Computer Science                                32000
Allen                                                      30 Electronics                                     42000
Smith                                                      20 Electricals                                     62000
Rahul                                                      20 Electricals                                     22000
Ram                                                        30 Electronics                                     32000
2. Display Staff Code, Staff Name, Department Name, and his manager’s number and name. Label the columns Staff#, Staff, Mgr#, Manager.

ans:
SQL> SELECT S.STUDENT_CODE,
  2    S.STUDENT_NAME,
  3    B.BOOK_CODE,
  4    BB.BOOK_NAME
  5  FROM STUDENT_MASTER S,
  6    BOOK_TRANSACTIONS B,
  7    BOOK_MASTER BB
  8  WHERE S.STUDENT_CODE=B.STUDENT_CODE
  9  AND TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM YYYY') LIKE TO_CHAR(SYSDATE,'DD MM YYYY');

no rows selected

3. Create a query that will display Student Code, Student Name, Book Code, and Book Name for all students whose expected book return date is today.
ans:

4. Create a query that will display Staff Code, Staff Name, Department Name, Designation name, Book Code, Book Name, and Issue Date for only those staff who have taken any book in last 30 days. . If required, make changes to the table to create such a scenario.
ans:
SQL> SELECT S.STAFF_CODE,
  2  S.STAFF_NAME,
  3  D.DEPT_NAME,
  4  F.DESIGN_NAME,
  5  K.BOOK_NAME,
  6  H.BOOK_ISSUE_DATE FROM STAFF_MASTER S,
  7  DEPARTMENT_MASTER D,
  8  DESIGNATION_MASTER F,
  9  BOOK_MASTER K,
 10  BOOK_TRANSACTIONS H WHERE ((SYSDATE)-(H.BOOK_ISSUE_DATE))<30;
5. Generate a report which contains the following information.
Staff Code, Staff Name, Designation Name, Department, Book Code, Book Name,
Author, Fine For the staff who has not returned the book. Fine will be calculated as Rs. 5 per day.
Fine = 5 * (No. of days = Current Date – Expected return date). Include records in the table to suit this problem statement
ans:

6. List Staff Code, Staff Name, and Salary for those who are getting less than the average salary of organization.
ans:

SQL> SELECT Staff_Code, Staff_Name,STAFF_SAL  FROM STAFF_MASTER WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFF_MASTER);

STAFF_CODE STAFF_NAME                                          STAFF_SAL
---------- -------------------------------------------------- ----------
    100001 Arvind                                                  17000
    100002 Shyam                                                   20000
    100003 Mohan                                                   24000
    100004 Anil                                                    20000
    100008 Raviraj                                                 18000
    100009 Rahul                                                   22000

6 rows selected.
7. Display Author Name, Book Name for those authors who wrote more than one book.
ans:

SQL> SELECT BOOK_NAME,BOOK_PUB_AUTHOR FROM  BOOK_MASTER WHERE BOOK_PUB_AUTHOR IN (SELECT BOOK_PUB_AUTHOR FROM BOOK_MASTER GROUP BY BOOK_PUB_AUTHOR HAVING COUNT(BOOK_PUB_AUTHOR)>1);

BOOK_NAME                                          BOOK_PUB_AUTHOR
-------------------------------------------------- --------------------------------------------------
Let Us C++                                         Yashavant Kanetkar
Let Us C                                           Yashavant Kanetkar


8. Display Staff Code, Staff Name, and Department Name for those who have taken more than one book.
ans:
SQL> SELECT S.Staff_Code,
  2  S.Staff_Name,
  3  D.DEPT_NAME FROM STAFF_MASTER S,
  4  DEPARTMENT_MASTER D WHERE STAFF_NAME IN(SELECT S.STAFF_NAME FROM STAFF_MASTER GROUP BY S.STAFF_NAME HAVING COUNT(S.STAFF_NAME)>1);

9. Display the Student Code, Student Name, and Department Name for that department in which there are maximum number of student studying.


10. Display Staff Code, Staff Name, Department Name, and Designation name for those who have joined in last 3 months.

ans:SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME FROM STAFF_MASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F WHERE ((SYSDATE)-(HIREDATE))<90;


4.1: Database Objects


1. Create the Customer table with the following columns.
CustomerId Number(5)
Cust_Name varchar2(20)
Address1 Varchar2(30)
Address2 Varchar2(30)

ans:SQL> create table customer(customerId number(5),Cust_name varchar2(20),address1 varchar2(30),address2 varchar2(30));

Table created.

2. Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the column to CustomerName and it should not accept Nulls.

ans:alter table customer modify cust_name varchar2(30);

Table altered.

SQL> alter table customer rename column Cust_name to customername;

Table altered.
SQL> alter table customer modify(customername NOT NULL);

Table altered.
3. a) Add the following Columns to the Customer table.
Gender Varchar2(1)
Age Number(3)
PhoneNo Number(10)
ans:
SQL> alter table customer add gender varchar2(1);

Table altered.

SQL> alter table customer add phoneno number(10);

Table altered.

SQL> alter table customer add age number(3);

Table altered.

b) Rename the Customer table to Cust_Table
 ans:
SQL> alter table customer rename column Cust_name to customername;

Table altered.

4. Insert rows with the following data in to the Customer table.
Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’)
In similar manner, add the below records to the Customer table:
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

ans:
Insert into cust_table values (1000, 'Allen', '#115 Chicago','#115 Chicago','M',7878776,25);

1 row created.
SQL> insert into cust_table values(1001, 'George', '#116 France', '#116 France', 'M', 434524,25);

1 row created.

SQL> insert into cust_table values(1002, 'Becker', '#114 New York', '#114 New York', 'M',  431525,45);

1 row created.

SQL> select*from cust_table;

CUSTOMERID CUSTOMERNAME                   ADDRESS1                       ADDRESS2                    G    PHONENO           AGE
---------- ------------------------------ ------------------------------ ------------------------------ - ---------- ----------
      1001 George                         #116 France                    #116 France                 M     434524            25
      1000 Allen                          #115 Chicago                   #115 Chicago                M    7878776            25
      1002 Becker                         #114 New York                  #114 New York               M     431525            45

5. Add the Primary key constraint for Customerld with the name Custld_Prim.

SQL> alter table cust_table add constraint pk_Custld primary key (customerid);

Table altered.

6. Insert the row given below in the Customer table and see the message generated by the Oracle server.
1002, John, #114 Chicago, #114 Chicago, M, 45, 439525

ans: SQL> insert into cust_table values(1002,' John',' #114 Chicago', '#114 Chicago', 'M',  439525,45);
insert into cust_table values(1002,' John',' #114 Chicago', '#114 Chicago', 'M',  439525,45)
*
ERROR at line 1:
ORA-00001: unique constraint (SYSTEM.PK_CUSTLD) violated

7. Disable the constraint on CustomerId, and insert the following data:
1002, Becker, #114 New York, #114 New york , M, 45, 431525
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525

ans:
SQL> alter table cust_table disable constraint pk_Custld;

Table altered.

SQL> insert into cust_table values(1002,' Becker',' #114 New York', '#114 New york ', 'M', 431525,45);

1 row created.

SQL> insert into cust_table values(1003,' Nanapatekar',' #115 India',' #115 India ', 'M', 431525,45);

1 row created.

SQL> select*from cust_table;

CUSTOMERID CUSTOMERNAME                   ADDRESS1                       ADDRESS2                    G    PHONENO           AGE
---------- ------------------------------ ------------------------------ ------------------------------ - ---------- ----------
      1001 George                         #116 France                    #116 France                 M     434524            25
      1000 Allen                          #115 Chicago                   #115 Chicago                M    7878776            25
      1002 Becker                         #114 New York                  #114 New York               M     431525            45
      1002  Becker                         #114 New York                 #114 New york               M     431525            45
      1003  Nanapatekar                    #115 India                     #115 India                 M     431525            45
8. Enable the constraint on CustomerId of the Customer table, and see the message generated by the Oracle server.
ans:

SQL> alter table cust_table enable constraint  pk_Custld;
alter table cust_table enable constraint  pk_Custld
*
ERROR at line 1:
ORA-02437: cannot validate (SYSTEM.PK_CUSTLD) - primary key violated
9. Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter Customer table, drop constraint Custid_Prim.
1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50
10. Delete all the existing rows from Customer table, and let the structure remain itself using TRUNCATE statement.

ans:
SQL> truncate table cust_table;

Table truncated.

11. In the Customer table, add a column E_mail.

ans:
SQL> alter table Cust_table add E_mail varchar2(30);

Table altered.

SQL> desc cust_table;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                           VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 PHONENO                                            NUMBER(10)
 AGE                                                NUMBER(3)
 E_MAIL                                             VARCHAR2(30)

12. Drop the E_mail column from Customer table.
ans: Alter table customer DROP column e_mail;
 Table droped.
13. Create the Suppliers table based on the structure of the Customer table. Include only the CustomerId, CustomerName, Address1, Address2, and phoneno columns.
Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno respectively.
14. Drop the above table and recreate the following table with the name CustomerMaster.
CustomerId Number(5) Primary key(Name of constraint is CustId_PK)
CustomerName Varchar2(30) Not Null
Addressl Varchar2(30) Not Null
Address2 Varchar2(30)
Gender Varchar2(l)
Age Number(3)
PhoneNo Number(10)

ans:
SQL>  create table customermaster(customerid number(5) constraint custid_pk primary key,customername varchar2(30) not null,Address1 varchar2(30) not null);

Table created.
15. Create the AccountsMaster table with the following Columns. Use sequence to generate Account number
Customerld Number(5)
AccountNumber Number(10,2) Primary key(Name of constraint is Acc_PK)
AccountType Char(3)
LedgerBalance Number(10,2) Not Null

ans:SQL>  create table customermaster(customerid number(5) constraint custid_pk primary key,customername varchar2(30) not null,Address1 varchar2(30) not null,
  2
SQL>  create table customermaster(customerid number(5) constraint custid_pk primary key,customername varchar2(30) not null,Address1 varchar2(30) not null);

Table created.

SQL> Create table accountmaster(customerid number(5),Accountnumber number(10,2) Constraint acc_pk primary key,accounttype char(3),ledgerbalance number(10,2)    Not Null);

Table created.

SQL>   create sequence sequence_acc minvalue 1001 maxvalue 9999 start with 1001 increment by 1 cache 101;

Sequence created.
16. Relate AccountsMaster table and CustomerMaster table through Customerld column with the constraint name Cust_acc.

ans:alter table Accountmaster ADD constraint cust_acc FOREIGN KEY(customerid) REFERENCES customermaster(customerid);

17. Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

ans:insert into customermaster values(1000, 'Allen', '#115 Chicago', '#115 Chicago', 'M', 25, 7878776);
	  insert into customermaster values(1001, 'George', '#116 France', '#116 France', 'M', 25, 434524);
	  insert into customermaster values(1002, 'Becker', '#114 New York', '#114 New York', 'M', 25, 431525);

18. Modify the AccountMaster table with the Check constraint to ensure AccountType should be either NRI or IND.

ans:SQL> alter table Accountmaster add constraint check_type check(accounttype='NRI' or accounttype='IND');

Table altered.
19. Modify the AccountsMaster table keeping a Check constraint with the name Balance_Check for the Minimum Balance which should be greater than 5000.

ans:SQL>  alter table Accountmaster add constraint Balance_check check(ledgerbalance > 5000);

Table altered.

20. Modify the AccountsMaster table such that if Customer is deleted from Customer table then all his details should be deleted from AccountsMaster table.

ans:
SQL> drop table accountmaster;

Table dropped.


SQL> create table accountmaster(customerid number(5),accountnumber number(8,2),accounttype char(3), ledgerbalance number(10,2), CONSTRAINT fk_column FOREIGN KEY(customerid) REFERENCES customermaster(customerid) ON DELETE CASCADE);

Table created.
21. Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’.

ans:SQL> Create table accountdetails as select * from Accountmaster;

Table created.

22. Create a view ‘Acc_view’ with columns Customerld, CustomerName, AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the view Acc_view, the column names should be CustomerCode,
AccountHolderName, AccountNumber, Type, and Balance for the respective columns from AccountsMaster table.
ans:
SQL> CREATE VIEW Acc_view AS (SELECT Customerid,Accountnumber,AccountType,ledgerBalance from AccountMaster);

View created.
23. Create a view on AccountsMaster table with name vAccs_Dtls. This view should list all customers whose AccountType is ‘IND’ and their balance amount should not be less than 10000. Using this view any DML operation should not violate the view conditions.
Hint: Use the With Check Option constraint.
ans:
SQL> CREATE VIEW vAccs_Dtls AS SELECT Accounttype,ledgerbalance from Accountmaster where accounttype = 'IND' and ledgerbalance < 10000;

View created.
24. Create a view accsvw10 which will not allow DML statement against it.
ans:
SQL>  create view accsvw10 as select * from accountmaster;

View created.
25. Create a Sequence with the name Seq_Dept on Deptno column of Department_Masters table. It should start from 40 and stop at 200. Increment parameter for the sequence Seq_Dept should be in step of 10.
ans:

SQL>  CREATE sequence SEQ_DEPT minvalue 40 start with 40 increment by 10 MAXVALUE 200 cache 40;

Sequence created.
26. Insert three sample rows by using the above sequence in Department_Masters table.
ans:
SQL> create table departmentmaster(deptno number(20),Dname varchar2(25),location varchar2(25));

Table created.

SQL> insert into departmentmaster  values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');

1 row created.

SQL> insert into departmentmaster  values(seq_dept.NEXTVAL,'SALES','chennai');

1 row created.

SQL> insert into departmentmaster  values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');

1 row created.


27. Drop the Seq_Dept sequence.
ans:

SQL> DROP sequence seq_dept;

Sequence dropped.

28. Get information on the index No_Name from the Data Dictionary.
ans:
SQL> CREATE INDEX no_name on emp(empno);

Index created.


SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.
29. Create synonym synEmp for the EMP table.
ans:
SQL> create SYNONYM synemp for emp;

Synonym created
30. Get Information on synonym synEmp from the Data Dictionary.
ans:
SQL> select * from synemp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.
31. Note: Perform this after creating the Employee Table mentioned in the next Lab assignment. Create Index on HireDate column and give the name as idx_emp_hiredate for this object.
ans:
SQL> CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);

Index created.
32. Create a Sequence with the name Seq_Emp on Empno column of Employee table. It should start from 1001. Try to set Minimum value for this sequence which is less than / greater than 1001, use the sequence to generate Empno while inserting records in Employee table and check the values generated.
ans:
SQL>  CREATE sequence SEQ_EMP minvalue 1001 start with 1001 increment by 1 cache 1001;

Sequence created.

5.1: Data Manipulation Language


1)Create Employee table with same structure as EMP table.
ans:
SQL>Create table employee as select * from emp where 1=3;
SQL>desc employee;


i)SQL> Create table employee as select * from emp where 1=3;

Table created.

ii)SQL> desc employee;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMPNO                                     NOT NULL NUMBER(4)
 ENAME                                              VARCHAR2(10)
 JOB                                                VARCHAR2(9)
 MGR                                                NUMBER(4)
 HIREDATE                                           DATE
 SAL                                                NUMBER(7,2)
 COMM                                               NUMBER(7,2)
 DEPTNO                                             NUMBER(2)

2)Write a query to populate Employee table using EMP table’s empno, ename, sal, deptno columns. 
ans:
 
SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      7369 SMITH      CLERK           7902 17-DEC-80        800
        20

      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300
        30

      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500
        30


     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      7566 JONES      MANAGER         7839 02-APR-81       2975
        20

      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400
        30

      7698 BLAKE      MANAGER         7839 01-MAY-81       2850
        30


     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      7782 CLARK      MANAGER         7839 09-JUN-81       2450
        10

      7788 SCOTT      ANALYST         7566 09-DEC-82       3000
        20

      7839 KING       PRESIDENT            17-NOV-81       5000
        10


     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0
        30

      7876 ADAMS      CLERK           7788 12-JAN-83       1100
        20

      7900 JAMES      CLERK           7698 03-DEC-81        950
        30


     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM
---------- ---------- --------- ---------- --------- ---------- ----------
    DEPTNO
----------
      7902 FORD       ANALYST         7566 03-DEC-81       3000
        20

      7934 MILLER     CLERK           7782 23-JAN-82       1300
        10


14 rows selected.


3)Write a query to change the job and deptno of employee whose empno is 7698 to the job and deptno of employee having empno 7788. 
 ans:

SQL> update employee set job=(select job from employee where empno=7788),deptno=(select deptno from employee where empno=7788) where empno=7698;


4)Delete the details of department whose department name is ‘SALES’?
ans:
SQL> delete from department where dept_name='SALES';

5)Write a query to change the deptno of employee with empno 7788 to that of employee having empno 7698 ?
ans:
SQL>update employee set empno=7788 where empno=7698;

6)Insert the following rows to the Employee table through parameter substitution.
. 1000,Allen, Clerk,1001,12-jan-01, 3000, 2,10
. 1001,George, analyst, null, 08 Sep 92, 5000,0, 10
. 1002, Becker, Manager, 1000, 4 Nov 92, 2800,4, 20
. 1003, 'Bill', Clerk, 1002, 4 Nov 92,3000, 0, 20
ans:

SQL> insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1000,'Allen', 'Clerk',1001,'12-jan-01', 3000, 2,10);
	  insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1001,'George', 'Analyst',null,'08-sep-1992', 5000, 0,10);
	 insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1002,'Becker', 'Manager',1000,'04-nov-1992', 2800, 4,20);
	 insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1003,'Bill','Clerk',1002,'04-nov-1992', 3000,0,20);
	   

6.1: Transaction Control Language Statements

1)Insert rows with the following data into the Customer table. 6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000
 6001, Jack, #116 France, #116 France, M, 25, 434524, 20000
 6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50 ?
ans:

 SQL>insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6000, 'John','#115 Chicago','#115 Chicago','M',25,7878776,10000);
     insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6001, 'Jack','#116 France','#116 France','M',25,434524,20000);
	 insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values ( 6002, 'James','#114 New York','#114 New York','M',45,431525,15000.50);


2)Create a Savepoint named ‘SP1’ after third record in the Customer table ?
ans:

SQL>  savepoint sp1;


3)Insert the below row in the Customer table.
6003, John, #114 Chicago, #114 Chicago, M, 45, 439525, 19000.60?
ans:

SQL> insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno,salary) values (6003, 'John','#114 Chicago','#114 Chicago','M',45,439525,19000.60);


4)Execute rollback statement in such a way that whatever manipulations done before Savepoint sp1 are permanently implemented,
 and the ones after Savepoint SP1 are not stored as a part of the Customer table?
ans:
SQL> rollback to sp1;
	  commit;




